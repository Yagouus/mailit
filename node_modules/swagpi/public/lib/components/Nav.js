
function moveUntilVisible(dir, $el) {
	let $next = $el[dir]();
	if ($next.get(0) === undefined) {
		return undefined;
	}
	if ($next.css('display') === 'block') {
		return $next;
	}
	return moveUntilVisible(dir, $next);
}

const selectNav = (hash) => {
	$(`.nav-item, .nav-subject`).removeClass('selected');
	let $match = $(`div[href="${hash}"]`).not('.search-item');
	$match.addClass('selected');
	let $body;
	if ($match.hasClass('nav-item')) {
		$body = $match.parent();
	} else {
		$body = $match.find('.nav-subject-body');
	}
	selectNavSubject($body);
}

const selectNavSubject = ($body) => {
	if (!$body.hasClass('nav-search-wrapper')) {
		let height = $body.children().length * $body.children().height();
		$('.nav-subject-body').not($body).css('height', '0px');
		$body.css('height', height);
	}
}

const NavItem = (o) => {
	let route = o.route;
	let $params = Parameters(o, o.showOptional);
	let $queries = Queries(o, o.showOptional);
	let $item = $(`
		<div class='nav-item' href='${slug(o.title)}'>
			<div class='nav-item-header'>${o.title}</div>
		</div>
	`);

	$item.on('click', (e) => {
		$('.nav-subject, .nav-item').removeClass('selected');
		$(e.currentTarget).addClass('selected');

		window.location.hash = slug(o.title);
		let $body = $(e.currentTarget).parent();
		selectNavSubject($body);
		e.stopPropagation();
		$('.api').focus();
	});
	return $item;
}

const NavSubject = (name, data, use) => {

	let out;
	let $subject;
	if (use === 'search') {
		out = [];
	} else {
		$subject = $(`
			<div class='nav-subject ${name}' href='${slug(name)}'>
				<div class='nav-subject-header ${name}'>${name}</div>
				<div class='nav-subject-body' style='height: 0px;'></div>
			</div>
		`);
	}

	if ($subject) {
		$subject.find('.nav-subject-header').on('click', (e) => {
			$('.nav-subject, .nav-item').removeClass('selected');
			$(e.currentTarget).parent().addClass('selected');
			window.location.hash = slug(name);
			let $body = $(e.currentTarget).parent().find('.nav-subject-body');
			selectNavSubject($body);
			$('.api').focus();
		});
	}

	data.forEach(o => {
		$item = NavItem(o);
		if (use === 'search') {
			$item.addClass('search-item');
			out.push($item);
			$subject = out;
		} else {
			$subject.find('.nav-subject-body').append($item);
		}
	});

	return $subject;
}

const NavSearch = (searchArray) => {

	searchArray.forEach(child => {
		$('.nav-search-wrapper').append(child);
	});

	$('.nav-search input').on('keydown', e => {
		if (e.keyCode === 38 || e.keyCode === 40) {
			e.preventDefault();
		}
	});

	$('.nav-search input').on('keyup', e => {
		if (e.keyCode === 13) {
			$('.nav-search input').val('');
			$('.nav-search-wrapper').find('.nav-item').removeClass('selected');
			$('.nav-search-wrapper').css('height', 0);
			$('.nav-subject').css('display', 'block');
			$('.api').focus();
			selectNav(window.location.hash);
			return;
		}
		if (e.keyCode === 38 || e.keyCode === 40) {
			let dir = e.keyCode === 38 ? 'prev' : 'next';
			let $el = $('.nav-search-wrapper').find('.nav-item.selected');
			let $prev = moveUntilVisible(dir, $el);
			if ($prev) {
				$el.removeClass('selected');
				$prev.addClass('selected');
				let href = $prev.attr('href');
				window.location.hash = slug(href);
				$('.nav-search input').focus();
			}
			return;
		}

		let val = $(e.currentTarget).val();
		if (String(val).trim() === '') {
			$('.nav-search-wrapper').css('height', '0px');
			$('.nav-subject').css('display', 'block');
			return;
		} else {
			$('.nav-search-wrapper').css('height', '192px');
			$('.nav-subject').css('display', 'none');
		}
		let first;
		let selected;
		let matches = 0;
		$('.nav-search-wrapper').find('.nav-item').css('display', 'none').removeClass('selected').forEach(child => {
			let title = $(child).html();
			if (String(title).toLowerCase().indexOf(val) > -1) {
				if (matches < 6) {
					matches++;
					$(child).css('display', 'block');
					if (first === undefined) {
						first = $(child);
					}
					if ($(child).hasClass('selected')) {
						selected = child;
					}
				}
			}
		});

		$('.nav-search-wrapper').css('height', matches * 32);

		if (selected === undefined && first) {
			let href = first.attr('href');
			window.location.hash = slug(href);
			first.addClass('selected');
			$('.nav-search input').focus();
		}
	});	
}



